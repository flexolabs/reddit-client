<?php

declare(strict_types=1);
/**
 * ThingTest.
 *
 * PHP version 7.2
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://openapi-generator.tech
 */

/**
 * Reddit.com.
 *
 * Reddit.com API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Flexolabs\RedditClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ThingTest Class Doc Comment.
 *
 * @category    Class
 * @description Thing
 *
 * @author      OpenAPI Generator team
 *
 * @see        https://openapi-generator.tech
 *
 * @internal
 *
 * @small
 */
final class ThingTest extends TestCase
{
    /**
     * Setup before running any test case.
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Clean up after running all test cases.
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Setup before running each test case.
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case.
     */
    public function tearDown(): void
    {
    }

    /**
     * Test "Thing".
     */
    public function testThing(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id".
     */
    public function testPropertyId(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name".
     */
    public function testPropertyName(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "permalink".
     */
    public function testPropertyPermalink(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "post_hint".
     */
    public function testPropertyPostHint(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_utc".
     */
    public function testPropertyCreatedUtc(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subreddit".
     */
    public function testPropertySubreddit(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subreddit_id".
     */
    public function testPropertySubredditId(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subreddit_type".
     */
    public function testPropertySubredditType(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "author".
     */
    public function testPropertyAuthor(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "author_fullname".
     */
    public function testPropertyAuthorFullname(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title".
     */
    public function testPropertyTitle(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "url".
     */
    public function testPropertyUrl(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "url_overridden_by_dest".
     */
    public function testPropertyUrlOverriddenByDest(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "body".
     */
    public function testPropertyBody(): void
    {
        // TODO: implement
        static::markTestIncomplete('Not implemented');
    }
}
